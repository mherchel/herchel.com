{"version":3,"sources":["webpack:///path---link-re-c4a8792fe3457fee4e42.js","webpack:///./.cache/json/link-re.json"],"names":["webpackJsonp","421","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","excerpt","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,iBAAgDC,gBAAmBC,GAAA,iGAAAC,KAAA,w8DAAm2BC,QAAA,0IAAAC,aAA23CN,MAAA,iBAAAO,KAAA,mBAAAN,OAAA,QAAmEO,aAAgBC,KAAA","file":"path---link-re-c4a8792fe3457fee4e42.js","sourcesContent":["webpackJsonp([129147071048890],{\n\n/***/ 421:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Mike Herchel\",\"author\":\"Mike Herchel\"}},\"markdownRemark\":{\"id\":\"/Users/mherchel/sites/herchel-new/src/blog/link-re/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><code>&#x3C;link rel='preload'></code> - forces browser to fetch resource. Does not block onload.</p>\\n<ul>\\n<li>This can be done via HTTP header also FYI</li>\\n<li>\\n<p>use the <code>as</code> attribute</p>\\n<ul>\\n<li>Tells browser what priority to request items as</li>\\n<li>Use this to avoid prefetching resource twice.</li>\\n<li>\\n<p>Add cross origin attribute fetch to fonts to avoid double fetch</p>\\n<ul>\\n<li><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\\\">https://developer.mozilla.org/en-US/docs/Web/HTML/CORS<em>settings</em>attributes</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>Use to load <em>late discovered</em> scripts.</li>\\n<li>Preload web fonts</li>\\n<li>Won’t be refetched if cached\\n<code>&#x3C;link rel='prefetch'></code></li>\\n<li>Use to fetch future navigation item</li>\\n</ul>\\n<h2>Browsers are smart. Don’t overdo this</h2>\\n<h3>Browser fetch prority</h3>\\n<p>Render blocker? In hero</p>\\n<h3>HTTP2 Server Push</h3>\\n<ul>\\n<li>Use Push when you know the precise loading order for resources and have a service worker to intercept requests that would cause cached resources to be pushed again. Use preload to move the start download time of an asset closer to the initial request — it’s useful for both first and third-party resources.</li>\\n</ul>\\n<h2>Browser support preload</h2>\\n<p>Chrome, FF, new version of Safari (not edge yet)\\n<a href=\\\"https://caniuse.com/#feat=link-rel-preload\\\">https://caniuse.com/#feat=link-rel-preload</a></p>\\n<h2>Browser support prefetch</h2>\\n<p>Chrome, FF, Edge. No Safari. <a href=\\\"https://caniuse.com/#search=prefetch\\\">https://caniuse.com/#search=prefetch</a></p>\\n<h2>Resources</h2>\\n<p><a href=\\\"https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf\\\">https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf</a></p>\\n<h2>link rel=“preload”</h2>\\n<p><a href=\\\"https://www.w3.org/TR/preload/\\\">https://www.w3.org/TR/preload/</a></p>\",\"excerpt\":\"<link rel='preload'>  - forces browser to fetch resource. Does not block onload. This can be done via HTTP header also FYI use the  as…\",\"frontmatter\":{\"title\":\"Resource Hints\",\"date\":\"January 21, 2018\",\"author\":null}}},\"pathContext\":{\"slug\":\"/link-re/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---link-re-c4a8792fe3457fee4e42.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Mike Herchel\",\"author\":\"Mike Herchel\"}},\"markdownRemark\":{\"id\":\"/Users/mherchel/sites/herchel-new/src/blog/link-re/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><code>&#x3C;link rel='preload'></code> - forces browser to fetch resource. Does not block onload.</p>\\n<ul>\\n<li>This can be done via HTTP header also FYI</li>\\n<li>\\n<p>use the <code>as</code> attribute</p>\\n<ul>\\n<li>Tells browser what priority to request items as</li>\\n<li>Use this to avoid prefetching resource twice.</li>\\n<li>\\n<p>Add cross origin attribute fetch to fonts to avoid double fetch</p>\\n<ul>\\n<li><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\\\">https://developer.mozilla.org/en-US/docs/Web/HTML/CORS<em>settings</em>attributes</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>Use to load <em>late discovered</em> scripts.</li>\\n<li>Preload web fonts</li>\\n<li>Won’t be refetched if cached\\n<code>&#x3C;link rel='prefetch'></code></li>\\n<li>Use to fetch future navigation item</li>\\n</ul>\\n<h2>Browsers are smart. Don’t overdo this</h2>\\n<h3>Browser fetch prority</h3>\\n<p>Render blocker? In hero</p>\\n<h3>HTTP2 Server Push</h3>\\n<ul>\\n<li>Use Push when you know the precise loading order for resources and have a service worker to intercept requests that would cause cached resources to be pushed again. Use preload to move the start download time of an asset closer to the initial request — it’s useful for both first and third-party resources.</li>\\n</ul>\\n<h2>Browser support preload</h2>\\n<p>Chrome, FF, new version of Safari (not edge yet)\\n<a href=\\\"https://caniuse.com/#feat=link-rel-preload\\\">https://caniuse.com/#feat=link-rel-preload</a></p>\\n<h2>Browser support prefetch</h2>\\n<p>Chrome, FF, Edge. No Safari. <a href=\\\"https://caniuse.com/#search=prefetch\\\">https://caniuse.com/#search=prefetch</a></p>\\n<h2>Resources</h2>\\n<p><a href=\\\"https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf\\\">https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf</a></p>\\n<h2>link rel=“preload”</h2>\\n<p><a href=\\\"https://www.w3.org/TR/preload/\\\">https://www.w3.org/TR/preload/</a></p>\",\"excerpt\":\"<link rel='preload'>  - forces browser to fetch resource. Does not block onload. This can be done via HTTP header also FYI use the  as…\",\"frontmatter\":{\"title\":\"Resource Hints\",\"date\":\"January 21, 2018\",\"author\":null}}},\"pathContext\":{\"slug\":\"/link-re/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/link-re.json\n// module id = 421\n// module chunks = 129147071048890"],"sourceRoot":""}